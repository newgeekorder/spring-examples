webpackHotUpdate(0,{

/***/ 20:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst grpc_web_client_1 = __webpack_require__(5);\nconst notes_service_pb_service_1 = __webpack_require__(7);\nconst notes_service_pb_1 = __webpack_require__(2);\nconst vue_typed_1 = __webpack_require__(8);\nconst Vue = __webpack_require__(3);\nconst template = __webpack_require__(6)();\nlet App = class App extends Vue {\n    constructor() {\n        super(...arguments);\n        this.host = 'http://localhost:9090';\n        this.notes = [];\n    }\n    mounted() {\n        alert(\"mounted\");\n    }\n    getNotes() {\n        const request = new notes_service_pb_1.GetNotesRequest();\n        grpc_web_client_1.grpc.invoke(notes_service_pb_service_1.NoteService.GetNotes, {\n            host: this.host,\n            request: request,\n            onMessage: (notes) => {\n                this.notes = notes.getNotesList();\n                console.log(\"Successfully queried, \", notes);\n            },\n            onEnd(code, message, trailers) {\n                console.log(code, message);\n            }\n        });\n    }\n    addNote() {\n        if (!this.author || !this.body) {\n            alert(\"Please populate the author and body field!\");\n        }\n        const request = new notes_service_pb_1.AddNoteRequest();\n        request.setAuthor(this.author);\n        request.setBody(this.body);\n        grpc_web_client_1.grpc.invoke(notes_service_pb_service_1.NoteService.AddNote, {\n            host: this.host,\n            request: request,\n            onMessage: (note) => {\n                this.notes.push(note);\n                console.log(\"Successfully added, \", note);\n            },\n            onEnd(code, message, trailers) {\n                console.log(code, message, trailers);\n            }\n        });\n    }\n    deleteNote(id) {\n        const request = new notes_service_pb_1.DeleteNoteRequest();\n        request.setId(id);\n        grpc_web_client_1.grpc.invoke(notes_service_pb_service_1.NoteService.DeleteNote, {\n            host: this.host,\n            request: request,\n            onMessage: (note) => {\n                let noteIndex = this.notes.indexOf(note);\n                if (noteIndex !== -1)\n                    delete this.notes[noteIndex];\n                console.log(\"Successfully deleted, \", note);\n            },\n            onEnd(code, message, trailers) {\n                console.log(code, message, trailers);\n            }\n        });\n    }\n};\nApp = __decorate([\n    vue_typed_1.Component({\n        template\n    })\n], App);\nnew App().$mount('#app');\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jbGllbnQvaW5kZXgudHM/OGVjMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLGlEQUFxRDtBQUNyRCwwREFBOEQ7QUFHOUQsa0RBQXFIO0FBRXJILDJDQUFxQztBQUNyQyxtQ0FBMEI7QUFFMUIsTUFBTSxRQUFRLEdBQUcsbUJBQU8sQ0FBQyxDQUFvQyxDQUFDLEVBQUUsQ0FBQztBQUtqRSxJQUFNLEdBQUcsR0FBVCxTQUFVLFNBQVEsR0FBRztJQUhyQjs7UUFJSSxTQUFJLEdBQUcsdUJBQXVCLENBQUM7UUFDL0IsVUFBSyxHQUFnQixFQUFFLENBQUM7SUFxRTVCLENBQUM7SUFqRUcsT0FBTztRQUNILEtBQUssQ0FBQyxTQUFTLENBQUM7SUFDcEIsQ0FBQztJQUVELFFBQVE7UUFDUCxNQUFNLE9BQU8sR0FBRyxJQUFJLGtDQUFlLEVBQUUsQ0FBQztRQUV0QyxzQkFBSSxDQUFDLE1BQU0sQ0FBQyxzQ0FBVyxDQUFDLFFBQVEsRUFBRTtZQUMzQixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7WUFDbEIsT0FBTyxFQUFFLE9BQU87WUFFYixTQUFTLEVBQUUsQ0FBQyxLQUF1QjtnQkFDL0IsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsWUFBWSxFQUFFLENBQUM7Z0JBQ2xDLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDakQsQ0FBQztZQUVELEtBQUssQ0FBQyxJQUFlLEVBQUUsT0FBZSxFQUFFLFFBQXdCO2dCQUM1RCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxPQUFPLENBQUM7WUFDOUIsQ0FBQztTQUNKLENBQUM7SUFDTixDQUFDO0lBRUQsT0FBTztRQUNILEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBQztZQUM1QixLQUFLLENBQUMsNENBQTRDLENBQUMsQ0FBQztRQUN4RCxDQUFDO1FBRUQsTUFBTSxPQUFPLEdBQUcsSUFBSSxpQ0FBYyxFQUFFLENBQUM7UUFDckMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDL0IsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFM0Isc0JBQUksQ0FBQyxNQUFNLENBQUMsc0NBQVcsQ0FBQyxPQUFPLEVBQUU7WUFDN0IsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1lBQ2YsT0FBTyxFQUFFLE9BQU87WUFFaEIsU0FBUyxFQUFFLENBQUMsSUFBVTtnQkFDbEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ3RCLE9BQU8sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDOUMsQ0FBQztZQUVELEtBQUssQ0FBQyxJQUFlLEVBQUUsT0FBZSxFQUFFLFFBQXdCO2dCQUM1RCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFDekMsQ0FBQztTQUNKLENBQUM7SUFDTixDQUFDO0lBRUQsVUFBVSxDQUFDLEVBQUU7UUFDVCxNQUFNLE9BQU8sR0FBRyxJQUFJLG9DQUFpQixFQUFFLENBQUM7UUFDeEMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUVsQixzQkFBSSxDQUFDLE1BQU0sQ0FBQyxzQ0FBVyxDQUFDLFVBQVUsRUFBRTtZQUNoQyxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7WUFDZixPQUFPLEVBQUUsT0FBTztZQUVoQixTQUFTLEVBQUUsQ0FBQyxJQUFVO2dCQUNsQixJQUFJLFNBQVMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDekMsRUFBRSxDQUFDLENBQUMsU0FBUyxLQUFLLENBQUMsQ0FBQyxDQUFDO29CQUFDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztnQkFDbkQsT0FBTyxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUNoRCxDQUFDO1lBRUQsS0FBSyxDQUFDLElBQWUsRUFBRSxPQUFlLEVBQUUsUUFBd0I7Z0JBQzVELE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztZQUN6QyxDQUFDO1NBQ0osQ0FBQztJQUNOLENBQUM7Q0FDSjtBQXZFSyxHQUFHO0lBSFIscUJBQVMsQ0FBQztRQUNWLFFBQVE7S0FDUixDQUFDO0dBQ0ksR0FBRyxDQXVFUjtBQUVELElBQUksR0FBRyxFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDIiwiZmlsZSI6IjIwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtncnBjLCBCcm93c2VySGVhZGVyc30gZnJvbSBcImdycGMtd2ViLWNsaWVudFwiO1xuaW1wb3J0IHtOb3RlU2VydmljZX0gZnJvbSBcIi4vX3Byb3RvL25vdGVzX3NlcnZpY2VfcGJfc2VydmljZVwiO1xuXG4vL1xuaW1wb3J0IHtOb3RlLCBHZXROb3Rlc1JlcXVlc3QsIEdldE5vdGVzUmVzcG9uc2UsIEFkZE5vdGVSZXF1ZXN0LCBEZWxldGVOb3RlUmVxdWVzdH0gZnJvbSBcIi4vX3Byb3RvL25vdGVzX3NlcnZpY2VfcGJcIjtcblxuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAndnVlLXR5cGVkJ1xuaW1wb3J0ICogYXMgVnVlIGZyb20gJ3Z1ZSdcblxuY29uc3QgdGVtcGxhdGUgPSByZXF1aXJlKCcuLi8uLi9ncnBjLXdlYi9jbGllbnQvc3JjL2FwcC5qYWRlJykoKTtcblxuQENvbXBvbmVudCh7XG5cdHRlbXBsYXRlXG59KVxuY2xhc3MgQXBwIGV4dGVuZHMgVnVlIHtcbiAgICBob3N0ID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6OTA5MCc7XG4gICAgbm90ZXM6IEFycmF5PE5vdGU+ID0gW107XG4gICAgYm9keTogJyc7XG4gICAgYXV0aG9yOiAnJztcblxuICAgIG1vdW50ZWQoKXtcbiAgICAgICAgYWxlcnQoXCJtb3VudGVkXCIpXG4gICAgfVxuXG4gICAgZ2V0Tm90ZXMoKXtcblx0ICAgIGNvbnN0IHJlcXVlc3QgPSBuZXcgR2V0Tm90ZXNSZXF1ZXN0KCk7XG5cblx0ICAgIGdycGMuaW52b2tlKE5vdGVTZXJ2aWNlLkdldE5vdGVzLCB7XG4gICAgICAgICAgICBob3N0OiB0aGlzLmhvc3QsXG5cdCAgICAgICAgcmVxdWVzdDogcmVxdWVzdCxcblxuICAgICAgICAgICAgb25NZXNzYWdlOiAobm90ZXM6IEdldE5vdGVzUmVzcG9uc2UpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLm5vdGVzID0gbm90ZXMuZ2V0Tm90ZXNMaXN0KCk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTdWNjZXNzZnVsbHkgcXVlcmllZCwgXCIsIG5vdGVzKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIG9uRW5kKGNvZGU6IGdycGMuQ29kZSwgbWVzc2FnZTogc3RyaW5nLCB0cmFpbGVyczogQnJvd3NlckhlYWRlcnMpe1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGNvZGUsIG1lc3NhZ2UpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgYWRkTm90ZSgpe1xuICAgICAgICBpZiAoIXRoaXMuYXV0aG9yIHx8ICF0aGlzLmJvZHkpe1xuICAgICAgICAgICAgYWxlcnQoXCJQbGVhc2UgcG9wdWxhdGUgdGhlIGF1dGhvciBhbmQgYm9keSBmaWVsZCFcIik7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCByZXF1ZXN0ID0gbmV3IEFkZE5vdGVSZXF1ZXN0KCk7XG4gICAgICAgIHJlcXVlc3Quc2V0QXV0aG9yKHRoaXMuYXV0aG9yKTtcbiAgICAgICAgcmVxdWVzdC5zZXRCb2R5KHRoaXMuYm9keSk7XG5cbiAgICAgICAgZ3JwYy5pbnZva2UoTm90ZVNlcnZpY2UuQWRkTm90ZSwge1xuICAgICAgICAgICAgaG9zdDogdGhpcy5ob3N0LFxuICAgICAgICAgICAgcmVxdWVzdDogcmVxdWVzdCxcblxuICAgICAgICAgICAgb25NZXNzYWdlOiAobm90ZTogTm90ZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMubm90ZXMucHVzaChub3RlKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlN1Y2Nlc3NmdWxseSBhZGRlZCwgXCIsIG5vdGUpO1xuICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgb25FbmQoY29kZTogZ3JwYy5Db2RlLCBtZXNzYWdlOiBzdHJpbmcsIHRyYWlsZXJzOiBCcm93c2VySGVhZGVycyl7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coY29kZSwgbWVzc2FnZSwgdHJhaWxlcnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGRlbGV0ZU5vdGUoaWQpe1xuICAgICAgICBjb25zdCByZXF1ZXN0ID0gbmV3IERlbGV0ZU5vdGVSZXF1ZXN0KCk7XG4gICAgICAgIHJlcXVlc3Quc2V0SWQoaWQpO1xuXG4gICAgICAgIGdycGMuaW52b2tlKE5vdGVTZXJ2aWNlLkRlbGV0ZU5vdGUsIHtcbiAgICAgICAgICAgIGhvc3Q6IHRoaXMuaG9zdCxcbiAgICAgICAgICAgIHJlcXVlc3Q6IHJlcXVlc3QsXG5cbiAgICAgICAgICAgIG9uTWVzc2FnZTogKG5vdGU6IE5vdGUpID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgbm90ZUluZGV4ID0gdGhpcy5ub3Rlcy5pbmRleE9mKG5vdGUpO1xuICAgICAgICAgICAgICAgIGlmIChub3RlSW5kZXggIT09IC0xKSBkZWxldGUgdGhpcy5ub3Rlc1tub3RlSW5kZXhdO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU3VjY2Vzc2Z1bGx5IGRlbGV0ZWQsIFwiLCBub3RlKTtcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIG9uRW5kKGNvZGU6IGdycGMuQ29kZSwgbWVzc2FnZTogc3RyaW5nLCB0cmFpbGVyczogQnJvd3NlckhlYWRlcnMpe1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGNvZGUsIG1lc3NhZ2UsIHRyYWlsZXJzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG59XG5cbm5ldyBBcHAoKS4kbW91bnQoJyNhcHAnKTtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jbGllbnQvaW5kZXgudHMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ })

})